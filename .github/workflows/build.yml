name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron:  '0 0 1 */3 *'    # Every 3 months

permissions:
  pull-requests: write
  contents: read

env:
  NET_VERSION: 10.0.x
  NUGET_PATH: './**/IeuanWalker.MinimalApi.Endpoints.1.0.0.nupkg'
  MINIMUM_COVERAGE: 80
  
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
  
    - name: Setup .NET ${{ env.NET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.NET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test with Coverage
      run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage --settings coverlet.runsettings

    - name: Code Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
      with:
        reports: 'coverage/**/coverage.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'MarkdownSummaryGithub;Cobertura'
        verbosity: 'Info'
        assemblyfilters: '-Microsoft.*;-System.*;-ExampleApi'
        classfilters: '-Microsoft.*;-System.*'
        filefilters: '-**/obj/**;-**/bin/**;-**/*.g.cs;-**/*.generated.cs'
        
    - name: Write to Job Summary
      run: cat coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
      shell: bash

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: coveragereport/SummaryGithub.md
        
    - name: Check Coverage Threshold
      shell: pwsh
      run: |
        [xml]$coverage = Get-Content coveragereport/Cobertura.xml
        $lineCoverage = [math]::Round([double]$coverage.coverage.'line-rate' * 100, 2)
        $branchCoverage = [math]::Round([double]$coverage.coverage.'branch-rate' * 100, 2)
        
        Write-Host "Line Coverage: $lineCoverage%"
        Write-Host "Branch Coverage: $branchCoverage%"
        
        if ($lineCoverage -lt ${{ env.MINIMUM_COVERAGE }}) {
          Write-Error "Line coverage ($lineCoverage%) is below minimum threshold (${{ env.MINIMUM_COVERAGE }}%)"
          exit 1
        }

    - uses: actions/upload-artifact@v4
      with:
        name: NuGet
        path: ${{ env.NUGET_PATH }}
