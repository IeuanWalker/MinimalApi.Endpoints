//HintName: EndpointExtensions.g.cs
// <auto-generated>
//   Generated by the IeuanWalker.MinimalApi.Endpoints
//   https://github.com/IeuanWalker/IeuanWalker.MinimalApi.Endpoints
// </auto-generated>

using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using System.Threading;

namespace TestAssembly;

public static class EndpointExtensions
{
	public static IHostApplicationBuilder AddEndpointsFromTestAssembly(this IHostApplicationBuilder builder)
	{
		builder.Services.AddScoped<global::TestNamespace.DuplicateMapGroupEndpoint>();

		return builder;
	}

	public static WebApplication MapEndpointsFromTestAssembly(this WebApplication app)
	{
		// GET: /api/dup/{id}
		RouteHandlerBuilder get_Dup_0 = app
			.MapGet("/api/dup/{id}", async (
				global::TestNamespace.GetRequest request,
				[FromServices] global::TestNamespace.DuplicateMapGroupEndpoint endpoint,
				CancellationToken ct) => await endpoint.Handle(request, ct))
			.WithTags("Dup")
			.WithName("get_Dup_0");

		global::TestNamespace.DuplicateMapGroupEndpoint.Configure(get_Dup_0);

		return app;
	}
}
