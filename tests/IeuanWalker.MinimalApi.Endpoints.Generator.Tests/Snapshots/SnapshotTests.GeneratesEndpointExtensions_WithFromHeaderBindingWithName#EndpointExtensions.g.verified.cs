//HintName: EndpointExtensions.g.cs
// <auto-generated>
//   Generated by the IeuanWalker.MinimalApi.Endpoints
//   https://github.com/IeuanWalker/IeuanWalker.MinimalApi.Endpoints
// </auto-generated>

using Microsoft.AspNetCore.Mvc;

namespace TestAssembly;

public static class EndpointExtensions
{
    public static IHostApplicationBuilder AddEndpointsFromTestAssembly(this IHostApplicationBuilder builder)
    {
        builder.Services.AddScoped<global::TestNamespace.GetUserEndpoint>();
        
        return builder;
    }
    
    public static WebApplication MapEndpointsFromTestAssembly(this WebApplication app)
    {
        // GET: /api/users/current
        RouteHandlerBuilder get_UsersCurrent_0 = app
            .MapGet("/api/users/current", async (
                [FromHeader(Name = "X-User-Id")] global::TestNamespace.GetUserRequest request,
                [FromServices] global::TestNamespace.GetUserEndpoint endpoint,
                CancellationToken ct) => await endpoint.Handle(request, ct))
            .WithTags("Users")
            .WithName("get_UsersCurrent_0");
        
        global::TestNamespace.GetUserEndpoint.Configure(get_UsersCurrent_0);
        
        return app;
    }
}
